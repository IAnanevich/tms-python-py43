'''Строки в Питоне сравниваются на основании значений символов.
Т.е. если мы захотим выяснить, что больше: «Apple» или «Яблоко», – то «Яблоко» окажется большим.
А все потому, что английская буква «A» имеет значение 65 (берется из таблицы кодировки), а русская
буква «Я» – 1071 (с помощью функции ord() это можно выяснить). Такое положение дел не устроило Анну.
Она считает, что строки нужно сравнивать по количеству входящих в них символов. Для этого девушка
создала класс RealString и реализовала озвученный инструментарий. Сравнивать между собой можно
как объекты класса, так и обычные строки с экземплярами класса RealString. К слову, Анне понадобилось
только 3 метода внутри класса (включая __init__()) для воплощения задуманного.'''


class RealString:
    def __init__(self, string: str):
        """
        Конструктор класса RealString.

        :param string: строка для инициализации объекта
        """
        self.string = string

    def __len__(self) -> int:
        """
        Метод, возвращающий длину строки.

        :return: длина строки
        """
        return len(self.string)

    def __lt__(self, other: str) -> bool:
        """
        Метод сравнения длины строки с другой строкой.

        :param other: другая строка для сравнения
        :return: True, если длина текущей строки меньше длины другой строки, иначе False
        """
        return len(self) < len(other)

    def __gt__(self, other:str) -> bool:
        """
        Метод сравнения длины строки с другой строкой.

        :param other: другая строка для сравнения
        :return: True, если длина текущей строки больше длины другой строки, иначе False
        """
        return len(self) > len(other)


string1 = RealString("Apple")
string2 = RealString("Яблоко")
print(string1 > string2)  # False
print(string1 < string2)  # True
print(string2 > "Banana")  # False
